
@{
    ViewData["Title"] = "Promise";
}

<h1>Promise</h1>

@section Scripts{
    <script>
        //建立Promise物件
        //const promise = new Promise((resolve,reject)=>{
        //     const num = Math.random() > 0.5 ? 1 : 0;
        //     console.log(num)
        //     if(num){
        //         resolve("成功")
        //     }else{
        //         reject("錯誤")
        //     }
        //})
        //使用Promise物件 then:執行成功後執行; catch:執行失敗後執行; finally: 無論結果為何都會執行
        //promise
        //    .then(data=>{
        //        console.log(data)
        //    })
        //    .catch(error=>{
        //        console.log(error)
        //    })
        //    .finally(()=>{
        //        console.log("end")
        //    })


    function printSomething(data){
        return new Promise((resolve,reject)=>{
            setTimeout(()=>{
                resolve(data+1)
            },1000)
        })
     }

        //printSomething會建立一個Promise物件，
        // 要取出Promise物件的資料要透過then()
       printSomething('A').then(d=>{
           console.log(d); // 取出A的資料
           return printSomething('B') //繼續執行B
       }).then(d=>{
           console.log(d); //取出B的資料
           return printSomething('C') //繼續執行C
       }).then(d=>{
           console.log(d); //取出C的資料
       }).finally(()=>{
           console.log('end');
       })


    </script>
}
